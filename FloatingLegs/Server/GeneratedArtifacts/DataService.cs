//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Inserting(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Inserted(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Updating(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Updated(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Deleting(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Deleted(global::LightSwitchApplication.Program entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Validate(global::LightSwitchApplication.Program entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Program, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updating(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updated(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Validate(global::LightSwitchApplication.Course entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Inserting(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Inserted(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Updating(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Updated(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Deleting(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Deleted(global::LightSwitchApplication.Instructor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Validate(global::LightSwitchApplication.Instructor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Instructor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Inserting(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Inserted(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Updating(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Updated(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Deleting(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Deleted(global::LightSwitchApplication.Section entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Validate(global::LightSwitchApplication.Section entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Section, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Inserting(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Inserted(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Updating(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Updated(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Deleting(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Deleted(global::LightSwitchApplication.Enrollment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Validate(global::LightSwitchApplication.Enrollment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enrollments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Enrollment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Inserting(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Inserted(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Updating(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Updated(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Deleting(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Deleted(global::LightSwitchApplication.CourseProgram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Validate(global::LightSwitchApplication.CourseProgram entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CoursePrograms_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseProgram, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Inserting(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Inserted(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Updating(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Updated(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Deleting(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Deleted(global::LightSwitchApplication.Sponsorship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Validate(global::LightSwitchApplication.Sponsorship entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsorships_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsorship, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Inserting(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Inserted(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Updating(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Updated(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Deleting(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Deleted(global::LightSwitchApplication.Sponsor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Validate(global::LightSwitchApplication.Sponsor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Inserting(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Inserted(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Updating(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Updated(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Deleting(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Deleted(global::LightSwitchApplication.SponsorRelationship entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Validate(global::LightSwitchApplication.SponsorRelationship entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SponsorRelationship_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SponsorRelationship, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Inserting(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Inserted(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Updating(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Updated(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Deleting(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Deleted(global::LightSwitchApplication.ScheduleViewAppt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Validate(global::LightSwitchApplication.ScheduleViewAppt entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ScheduleViewAppt, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updating(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updated(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Validate(global::LightSwitchApplication.Table1Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Inserting(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Inserted(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Updating(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Updated(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Deleting(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Deleted(global::LightSwitchApplication.Pool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Validate(global::LightSwitchApplication.Pool entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pools_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Pool, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Inserting(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Inserted(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Updating(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Updated(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Deleting(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Deleted(global::LightSwitchApplication.Attendance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Validate(global::LightSwitchApplication.Attendance entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendances_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendance, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Programs_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Programs_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Program> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Programs_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Program> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Programs_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Instructors_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instructors_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Instructors_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Instructors_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Clients_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Clients_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Clients_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AvailableSections_Executing(global::System.Nullable<int> ClientId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailableSections_PreprocessQuery(global::System.Nullable<int> ClientId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AvailableSections_Executed(global::System.Nullable<int> ClientId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AvailableSections_ExecuteFailed(global::System.Nullable<int> ClientId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByProgram_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByProgram_Executing(global::System.Nullable<int> CategoryId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByProgram_PreprocessQuery(global::System.Nullable<int> CategoryId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByProgram_Executed(global::System.Nullable<int> CategoryId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByProgram_ExecuteFailed(global::System.Nullable<int> CategoryId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sponsors_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sponsors_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Sponsor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sponsors_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Sponsor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Sponsors_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterSections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterSections_Executing(string FilterTerm);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterSections_PreprocessQuery(string FilterTerm, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterSections_Executed(string FilterTerm, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterSections_ExecuteFailed(string FilterTerm, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByClient_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByClient_Executing(global::System.Nullable<int> ClientId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectionsByClient_PreprocessQuery(global::System.Nullable<int> ClientId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByClient_Executed(global::System.Nullable<int> ClientId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SectionsByClient_ExecuteFailed(global::System.Nullable<int> ClientId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Program>
                __ProgramsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Program>(
                    "Programs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_Filter);
            private static bool __Programs_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Programs_CanInsert(ref result);
                return result;
            }
            private static bool __Programs_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Programs_CanUpdate(ref result);
                return result;
            }
            private static bool __Programs_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Programs_CanDelete(ref result);
                return result;
            }
            private static bool __Programs_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Programs_CanRead(ref result);
                return result;
            }
            private static void __Programs_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Inserting(e);
            }
            private static void __Programs_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Inserted(e);
            }
            private static void __Programs_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Updating(e);
            }
            private static void __Programs_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Updated(e);
            }
            private static void __Programs_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Deleting(e);
            }
            private static void __Programs_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e)
            {
                d.Programs_Deleted(e);
            }
            private static void __Programs_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Program e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Programs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Program, bool>> __Programs_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Program, bool>> filter = null;
                d.Programs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __CoursesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Filter);
            private static bool __Courses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanInsert(ref result);
                return result;
            }
            private static bool __Courses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanUpdate(ref result);
                return result;
            }
            private static bool __Courses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanDelete(ref result);
                return result;
            }
            private static bool __Courses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanRead(ref result);
                return result;
            }
            private static void __Courses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserting(e);
            }
            private static void __Courses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserted(e);
            }
            private static void __Courses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updating(e);
            }
            private static void __Courses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updated(e);
            }
            private static void __Courses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleting(e);
            }
            private static void __Courses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleted(e);
            }
            private static void __Courses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Courses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> __Courses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> filter = null;
                d.Courses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __InstructorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_Filter);
            private static bool __Instructors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanInsert(ref result);
                return result;
            }
            private static bool __Instructors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanUpdate(ref result);
                return result;
            }
            private static bool __Instructors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanDelete(ref result);
                return result;
            }
            private static bool __Instructors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Instructors_CanRead(ref result);
                return result;
            }
            private static void __Instructors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Inserting(e);
            }
            private static void __Instructors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Inserted(e);
            }
            private static void __Instructors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Updating(e);
            }
            private static void __Instructors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Updated(e);
            }
            private static void __Instructors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Deleting(e);
            }
            private static void __Instructors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e)
            {
                d.Instructors_Deleted(e);
            }
            private static void __Instructors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Instructor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Instructors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Instructor, bool>> __Instructors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Instructor, bool>> filter = null;
                d.Instructors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __SectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_Filter);
            private static bool __Sections_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanInsert(ref result);
                return result;
            }
            private static bool __Sections_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanUpdate(ref result);
                return result;
            }
            private static bool __Sections_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanDelete(ref result);
                return result;
            }
            private static bool __Sections_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sections_CanRead(ref result);
                return result;
            }
            private static void __Sections_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Inserting(e);
            }
            private static void __Sections_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Inserted(e);
            }
            private static void __Sections_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Updating(e);
            }
            private static void __Sections_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Updated(e);
            }
            private static void __Sections_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Deleting(e);
            }
            private static void __Sections_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e)
            {
                d.Sections_Deleted(e);
            }
            private static void __Sections_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Section e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sections_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Section, bool>> __Sections_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Section, bool>> filter = null;
                d.Sections_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>
                __EnrollmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Enrollment>(
                    "Enrollments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Enrollments_Filter);
            private static bool __Enrollments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanInsert(ref result);
                return result;
            }
            private static bool __Enrollments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanUpdate(ref result);
                return result;
            }
            private static bool __Enrollments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanDelete(ref result);
                return result;
            }
            private static bool __Enrollments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Enrollments_CanRead(ref result);
                return result;
            }
            private static void __Enrollments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Inserting(e);
            }
            private static void __Enrollments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Inserted(e);
            }
            private static void __Enrollments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Updating(e);
            }
            private static void __Enrollments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Updated(e);
            }
            private static void __Enrollments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Deleting(e);
            }
            private static void __Enrollments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e)
            {
                d.Enrollments_Deleted(e);
            }
            private static void __Enrollments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Enrollment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Enrollments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Enrollment, bool>> __Enrollments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Enrollment, bool>> filter = null;
                d.Enrollments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseProgram>
                __CourseProgramsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseProgram>(
                    "CoursePrograms",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CoursePrograms_Filter);
            private static bool __CoursePrograms_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CoursePrograms_CanInsert(ref result);
                return result;
            }
            private static bool __CoursePrograms_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CoursePrograms_CanUpdate(ref result);
                return result;
            }
            private static bool __CoursePrograms_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CoursePrograms_CanDelete(ref result);
                return result;
            }
            private static bool __CoursePrograms_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CoursePrograms_CanRead(ref result);
                return result;
            }
            private static void __CoursePrograms_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Inserting(e);
            }
            private static void __CoursePrograms_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Inserted(e);
            }
            private static void __CoursePrograms_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Updating(e);
            }
            private static void __CoursePrograms_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Updated(e);
            }
            private static void __CoursePrograms_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Deleting(e);
            }
            private static void __CoursePrograms_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e)
            {
                d.CoursePrograms_Deleted(e);
            }
            private static void __CoursePrograms_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseProgram e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CoursePrograms_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseProgram, bool>> __CoursePrograms_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseProgram, bool>> filter = null;
                d.CoursePrograms_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsorship>
                __SponsorshipsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsorship>(
                    "Sponsorships",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsorships_Filter);
            private static bool __Sponsorships_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsorships_CanInsert(ref result);
                return result;
            }
            private static bool __Sponsorships_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsorships_CanUpdate(ref result);
                return result;
            }
            private static bool __Sponsorships_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsorships_CanDelete(ref result);
                return result;
            }
            private static bool __Sponsorships_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsorships_CanRead(ref result);
                return result;
            }
            private static void __Sponsorships_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Inserting(e);
            }
            private static void __Sponsorships_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Inserted(e);
            }
            private static void __Sponsorships_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Updating(e);
            }
            private static void __Sponsorships_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Updated(e);
            }
            private static void __Sponsorships_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Deleting(e);
            }
            private static void __Sponsorships_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e)
            {
                d.Sponsorships_Deleted(e);
            }
            private static void __Sponsorships_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsorship e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sponsorships_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsorship, bool>> __Sponsorships_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsorship, bool>> filter = null;
                d.Sponsorships_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsor>
                __SponsorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsor>(
                    "Sponsors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_Filter);
            private static bool __Sponsors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsors_CanInsert(ref result);
                return result;
            }
            private static bool __Sponsors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsors_CanUpdate(ref result);
                return result;
            }
            private static bool __Sponsors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsors_CanDelete(ref result);
                return result;
            }
            private static bool __Sponsors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sponsors_CanRead(ref result);
                return result;
            }
            private static void __Sponsors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Inserting(e);
            }
            private static void __Sponsors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Inserted(e);
            }
            private static void __Sponsors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Updating(e);
            }
            private static void __Sponsors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Updated(e);
            }
            private static void __Sponsors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Deleting(e);
            }
            private static void __Sponsors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e)
            {
                d.Sponsors_Deleted(e);
            }
            private static void __Sponsors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sponsor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sponsors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsor, bool>> __Sponsors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sponsor, bool>> filter = null;
                d.Sponsors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SponsorRelationship>
                __SponsorRelationshipEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SponsorRelationship>(
                    "SponsorRelationship",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SponsorRelationship_Filter);
            private static bool __SponsorRelationship_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SponsorRelationship_CanInsert(ref result);
                return result;
            }
            private static bool __SponsorRelationship_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SponsorRelationship_CanUpdate(ref result);
                return result;
            }
            private static bool __SponsorRelationship_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SponsorRelationship_CanDelete(ref result);
                return result;
            }
            private static bool __SponsorRelationship_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SponsorRelationship_CanRead(ref result);
                return result;
            }
            private static void __SponsorRelationship_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Inserting(e);
            }
            private static void __SponsorRelationship_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Inserted(e);
            }
            private static void __SponsorRelationship_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Updating(e);
            }
            private static void __SponsorRelationship_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Updated(e);
            }
            private static void __SponsorRelationship_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Deleting(e);
            }
            private static void __SponsorRelationship_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e)
            {
                d.SponsorRelationship_Deleted(e);
            }
            private static void __SponsorRelationship_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SponsorRelationship e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SponsorRelationship_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SponsorRelationship, bool>> __SponsorRelationship_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SponsorRelationship, bool>> filter = null;
                d.SponsorRelationship_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ScheduleViewAppt>
                __ScheduleViewApptsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ScheduleViewAppt>(
                    "ScheduleViewAppts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ScheduleViewAppts_Filter);
            private static bool __ScheduleViewAppts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ScheduleViewAppts_CanInsert(ref result);
                return result;
            }
            private static bool __ScheduleViewAppts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ScheduleViewAppts_CanUpdate(ref result);
                return result;
            }
            private static bool __ScheduleViewAppts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ScheduleViewAppts_CanDelete(ref result);
                return result;
            }
            private static bool __ScheduleViewAppts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ScheduleViewAppts_CanRead(ref result);
                return result;
            }
            private static void __ScheduleViewAppts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Inserting(e);
            }
            private static void __ScheduleViewAppts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Inserted(e);
            }
            private static void __ScheduleViewAppts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Updating(e);
            }
            private static void __ScheduleViewAppts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Updated(e);
            }
            private static void __ScheduleViewAppts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Deleting(e);
            }
            private static void __ScheduleViewAppts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e)
            {
                d.ScheduleViewAppts_Deleted(e);
            }
            private static void __ScheduleViewAppts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ScheduleViewAppts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ScheduleViewAppt, bool>> __ScheduleViewAppts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ScheduleViewAppt, bool>> filter = null;
                d.ScheduleViewAppts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1Items",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Filter);
            private static bool __Table1Items_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanInsert(ref result);
                return result;
            }
            private static bool __Table1Items_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanUpdate(ref result);
                return result;
            }
            private static bool __Table1Items_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanDelete(ref result);
                return result;
            }
            private static bool __Table1Items_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanRead(ref result);
                return result;
            }
            private static void __Table1Items_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserting(e);
            }
            private static void __Table1Items_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserted(e);
            }
            private static void __Table1Items_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updating(e);
            }
            private static void __Table1Items_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updated(e);
            }
            private static void __Table1Items_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleting(e);
            }
            private static void __Table1Items_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleted(e);
            }
            private static void __Table1Items_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Table1Items_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> __Table1Items_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter = null;
                d.Table1Items_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pool>
                __PoolsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pool>(
                    "Pools",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pools_Filter);
            private static bool __Pools_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pools_CanInsert(ref result);
                return result;
            }
            private static bool __Pools_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pools_CanUpdate(ref result);
                return result;
            }
            private static bool __Pools_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pools_CanDelete(ref result);
                return result;
            }
            private static bool __Pools_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pools_CanRead(ref result);
                return result;
            }
            private static void __Pools_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Inserting(e);
            }
            private static void __Pools_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Inserted(e);
            }
            private static void __Pools_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Updating(e);
            }
            private static void __Pools_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Updated(e);
            }
            private static void __Pools_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Deleting(e);
            }
            private static void __Pools_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e)
            {
                d.Pools_Deleted(e);
            }
            private static void __Pools_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pool e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Pools_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Pool, bool>> __Pools_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Pool, bool>> filter = null;
                d.Pools_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attendance>
                __AttendancesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attendance>(
                    "Attendances",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendances_Filter);
            private static bool __Attendances_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendances_CanInsert(ref result);
                return result;
            }
            private static bool __Attendances_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendances_CanUpdate(ref result);
                return result;
            }
            private static bool __Attendances_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendances_CanDelete(ref result);
                return result;
            }
            private static bool __Attendances_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendances_CanRead(ref result);
                return result;
            }
            private static void __Attendances_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Inserting(e);
            }
            private static void __Attendances_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Inserted(e);
            }
            private static void __Attendances_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Updating(e);
            }
            private static void __Attendances_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Updated(e);
            }
            private static void __Attendances_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Deleting(e);
            }
            private static void __Attendances_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e)
            {
                d.Attendances_Deleted(e);
            }
            private static void __Attendances_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendance e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Attendances_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendance, bool>> __Attendances_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendance, bool>> filter = null;
                d.Attendances_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Program>
                __Programs_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Program>(
                    "Programs_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Programs_All_PreprocessQuery);
            private static bool __Programs_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Programs_All_CanExecute(ref r);
                return r;
            }
            private static void __Programs_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Programs_All_Executing();
            }
            private static void __Programs_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Programs_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Program>)args[0]);
            }
            private static void __Programs_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Programs_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Programs_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Program> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Program>)args[0];
                d.Programs_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>
                __Instructors_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Instructor>(
                    "Instructors_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Instructors_All_PreprocessQuery);
            private static bool __Instructors_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Instructors_All_CanExecute(ref r);
                return r;
            }
            private static void __Instructors_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_All_Executing();
            }
            private static void __Instructors_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Instructors_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Instructor>)args[0]);
            }
            private static void __Instructors_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Instructors_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Instructors_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Instructor>)args[0];
                d.Instructors_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __Sections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "Sections_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sections_All_PreprocessQuery);
            private static bool __Sections_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Sections_All_CanExecute(ref r);
                return r;
            }
            private static void __Sections_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_All_Executing();
            }
            private static void __Sections_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[0]);
            }
            private static void __Sections_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Sections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Sections_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[0];
                d.Sections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __Clients_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_All_PreprocessQuery);
            private static bool __Clients_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Clients_All_CanExecute(ref r);
                return r;
            }
            private static void __Clients_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Clients_All_Executing();
            }
            private static void __Clients_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Clients_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client>)args[0]);
            }
            private static void __Clients_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Clients_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Clients_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Client>)args[0];
                d.Clients_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __AvailableSectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "AvailableSections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailableSections_PreprocessQuery);
            private static bool __AvailableSections_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AvailableSections_CanExecute(ref r);
                return r;
            }
            private static void __AvailableSections_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailableSections_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __AvailableSections_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailableSections_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __AvailableSections_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AvailableSections_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __AvailableSections_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.AvailableSections_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __SectionsByProgramEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "SectionsByProgram",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByProgram_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByProgram_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByProgram_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByProgram_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByProgram_PreprocessQuery);
            private static bool __SectionsByProgram_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SectionsByProgram_CanExecute(ref r);
                return r;
            }
            private static void __SectionsByProgram_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByProgram_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SectionsByProgram_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByProgram_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __SectionsByProgram_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SectionsByProgram_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SectionsByProgram_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.SectionsByProgram_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsor>
                __Sponsors_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sponsor>(
                    "Sponsors_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sponsors_All_PreprocessQuery);
            private static bool __Sponsors_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Sponsors_All_CanExecute(ref r);
                return r;
            }
            private static void __Sponsors_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sponsors_All_Executing();
            }
            private static void __Sponsors_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Sponsors_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Sponsor>)args[0]);
            }
            private static void __Sponsors_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Sponsors_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Sponsors_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Sponsor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Sponsor>)args[0];
                d.Sponsors_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __FilterSectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "FilterSections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterSections_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterSections_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterSections_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterSections_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterSections_PreprocessQuery);
            private static bool __FilterSections_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FilterSections_CanExecute(ref r);
                return r;
            }
            private static void __FilterSections_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FilterSections_Executing((string)args[0]);
            }
            private static void __FilterSections_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FilterSections_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __FilterSections_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FilterSections_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FilterSections_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.FilterSections_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>
                __SectionsByClientEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Section>(
                    "SectionsByClient",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByClient_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByClient_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByClient_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByClient_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SectionsByClient_PreprocessQuery);
            private static bool __SectionsByClient_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SectionsByClient_CanExecute(ref r);
                return r;
            }
            private static void __SectionsByClient_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByClient_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SectionsByClient_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SectionsByClient_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Section>)args[1]);
            }
            private static void __SectionsByClient_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SectionsByClient_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SectionsByClient_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Section> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Section>)args[1];
                d.SectionsByClient_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
