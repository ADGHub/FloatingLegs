

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ScheduleViewAppt : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ScheduleViewAppt entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScheduleViewAppt()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScheduleViewAppt(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ScheduleViewAppt> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppt_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduleViewAppt_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subject
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Subject);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Subject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ApptGuid
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.ApptGuid);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.ApptGuid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApptGuid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApptGuid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApptGuid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Category
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Category);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Category, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Importance
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Importance);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Importance, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Importance_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Importance_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Importance_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsAllDay
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.IsAllDay);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.IsAllDay, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAllDay_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAllDay_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAllDay_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RecurrenceRule
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RecurrenceRule);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RecurrenceRule, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecurrenceRule_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecurrenceRule_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecurrenceRule_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeMarker
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.TimeMarker);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.TimeMarker, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeMarker_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeMarker_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeMarker_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string URL
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.URL);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.URL, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void URL_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void URL_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void URL_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.GetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.SetValue(this, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ScheduleViewAppt,
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass,
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.IImplementation,
                global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>.Entry
                __ScheduleViewApptEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>.Entry(
                    global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.__ScheduleViewAppt_CreateNew,
                    global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.__ScheduleViewAppt_Created,
                    global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.__ScheduleViewAppt_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ScheduleViewAppt __ScheduleViewAppt_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ScheduleViewAppt> es)
            {
                return new global::LightSwitchApplication.ScheduleViewAppt(es);
            }
            private static void __ScheduleViewAppt_Created(global::LightSwitchApplication.ScheduleViewAppt e)
            {
                e.ScheduleViewAppt_Created();
            }
            private static bool __ScheduleViewAppt_AllowSaveWithErrors(global::LightSwitchApplication.ScheduleViewAppt e)
            {
                bool result = false;
                e.ScheduleViewAppt_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> Subject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Subject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime> EndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.EndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> ApptGuid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.ApptGuid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> Importance
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Importance) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>> IsAllDay
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.IsAllDay) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> RecurrenceRule
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.RecurrenceRule) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> TimeMarker
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.TimeMarker) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> URL
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.URL) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Subject { get; set; }
                new global::System.DateTime StartDate { get; set; }
                new global::System.DateTime EndDate { get; set; }
                new string ApptGuid { get; set; }
                new string Category { get; set; }
                new string Importance { get; set; }
                new global::System.Nullable<bool> IsAllDay { get; set; }
                new string Location { get; set; }
                new string RecurrenceRule { get; set; }
                new string TimeMarker { get; set; }
                new string URL { get; set; }
                new string Description { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    Subject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "Subject",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Subject_OnValueChanged);
                private static void _Subject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Subject, sf);
                }
                private static bool _Subject_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Subject_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subject_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subject_Validate(r);
                }
                private static string _Subject_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Subject;
                }
                private static void _Subject_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subject = v;
                }
                private static void _Subject_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Subject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.DateTime _StartDate_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Entry(
                        "EndDate",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static bool _EndDate_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.EndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndDate_Validate(r);
                }
                private static global::System.DateTime _EndDate_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.EndDate;
                }
                private static void _EndDate_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndDate = global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.EndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    ApptGuid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "ApptGuid",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._ApptGuid_OnValueChanged);
                private static void _ApptGuid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._ApptGuid, sf);
                }
                private static bool _ApptGuid_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.ApptGuid_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApptGuid_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApptGuid_Validate(r);
                }
                private static string _ApptGuid_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.ApptGuid;
                }
                private static void _ApptGuid_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ApptGuid = v;
                }
                private static void _ApptGuid_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.ApptGuid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "Category",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static string _Category_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Category = v;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    Importance = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "Importance",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Importance_OnValueChanged);
                private static void _Importance_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Importance, sf);
                }
                private static bool _Importance_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Importance_IsReadOnly(ref result);
                    return result;
                }
                private static void _Importance_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Importance_Validate(r);
                }
                private static string _Importance_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Importance;
                }
                private static void _Importance_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Importance = v;
                }
                private static void _Importance_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Importance_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsAllDay = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsAllDay",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._IsAllDay_OnValueChanged);
                private static void _IsAllDay_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._IsAllDay, sf);
                }
                private static bool _IsAllDay_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.IsAllDay_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsAllDay_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsAllDay_Validate(r);
                }
                private static global::System.Nullable<bool> _IsAllDay_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.IsAllDay;
                }
                private static void _IsAllDay_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsAllDay = v;
                }
                private static void _IsAllDay_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.IsAllDay_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    RecurrenceRule = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "RecurrenceRule",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._RecurrenceRule_OnValueChanged);
                private static void _RecurrenceRule_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._RecurrenceRule, sf);
                }
                private static bool _RecurrenceRule_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.RecurrenceRule_IsReadOnly(ref result);
                    return result;
                }
                private static void _RecurrenceRule_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RecurrenceRule_Validate(r);
                }
                private static string _RecurrenceRule_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.RecurrenceRule;
                }
                private static void _RecurrenceRule_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RecurrenceRule = v;
                }
                private static void _RecurrenceRule_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.RecurrenceRule_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    TimeMarker = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "TimeMarker",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._TimeMarker_OnValueChanged);
                private static void _TimeMarker_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeMarker, sf);
                }
                private static bool _TimeMarker_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.TimeMarker_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeMarker_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeMarker_Validate(r);
                }
                private static string _TimeMarker_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeMarker;
                }
                private static void _TimeMarker_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TimeMarker = v;
                }
                private static void _TimeMarker_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.TimeMarker_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    URL = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "URL",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._URL_OnValueChanged);
                private static void _URL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._URL, sf);
                }
                private static bool _URL_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.URL_IsReadOnly(ref result);
                    return result;
                }
                private static void _URL_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.URL_Validate(r);
                }
                private static string _URL_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.URL;
                }
                private static void _URL_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.URL = v;
                }
                private static void _URL_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.URL_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.ScheduleViewAppt.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data> c, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.ScheduleViewAppt e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.ScheduleViewAppt.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.ScheduleViewAppt e)
                {
                    e.Description_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _Subject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.DateTime>.Data _EndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _ApptGuid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _Importance;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, global::System.Nullable<bool>>.Data _IsAllDay;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _RecurrenceRule;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _TimeMarker;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _URL;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ScheduleViewAppt, global::LightSwitchApplication.ScheduleViewAppt.DetailsClass, string>.Data _Description;
            
        }
    
        #endregion
    }
    
    #endregion
}
